version: '3.8'

services:
  scrapper-llm:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scrapper-llm-app
    ports:
      - "8000:8000"    # API principal
      - "8080:8080"    # Dashboard
      - "8888:8888"    # Jupyter/herramientas adicionales
    volumes:
      # Datos persistentes
      - ./data:/app/data
      - ./logs:/app/logs
      - ./cache:/app/cache
      - ./ml-models:/app/ml-models
      # Configuración opcional
      - ./.env:/app/.env:ro
    environment:
      - PYTHONPATH=/app
      - ENVIRONMENT=production
      - LOG_LEVEL=INFO
      # Chrome/Selenium configuración
      - CHROME_NO_SANDBOX=true
      - CHROME_HEADLESS=true
      - WEBDRIVER_CHROME_DRIVER=/usr/local/bin/chromedriver
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 2G
          cpus: '1.0'

  # Dashboard independiente (opcional)
  dashboard:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scrapper-llm-dashboard
    ports:
      - "8081:8080"
    volumes:
      - ./data:/app/data
      - ./logs:/app/logs
      - ./cache:/app/cache
      - ./ml-models:/app/ml-models
      - ./tools:/app/tools
    environment:
      - PYTHONPATH=/app
      - DASHBOARD_PORT=8080
    command: ["python", "tools/dashboard/categorized_dashboard_server.py"]
    restart: unless-stopped
    depends_on:
      - scrapper-llm

  # Servicio de monitoreo opcional
  monitoring:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: scrapper-llm-monitor
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    environment:
      - PYTHONPATH=/app
      - MONITOR_INTERVAL=60
    command: ["python", "tools/code_analysis/quality_scorer.py", "--monitor"]
    restart: unless-stopped
    depends_on:
      - scrapper-llm

volumes:
  data:
    driver: local
  logs:
    driver: local
  cache:
    driver: local
  ml-models:
    driver: local

networks:
  default:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16